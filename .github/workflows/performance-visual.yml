# Performance & Visual Quality workflow
# Extends CI with performance budgets and visual regression testing
# Runs on pull requests to ensure performance and visual consistency

name: Performance & Visual Quality

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Performance budget validation
  performance:
    name: Performance Budget
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run performance budget check
        run: npm run perf:budget

      - name: Run bundle analyzer
        run: npm run perf:analyze

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: .next/analyze/
          retention-days: 30

  # Lighthouse CI for performance monitoring
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Build application
        run: npm run build

      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # Visual regression testing
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Run visual regression tests
        run: npx playwright test visual-regression.spec.ts

      - name: Upload visual regression report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-regression-report
          path: playwright-report/
          retention-days: 30

      - name: Upload visual diff artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-diffs
          path: test-results/
          retention-days: 30

  # Component library health check
  component-health:
    name: Component Library Health
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check component exports
        run: |
          node -e "
            const components = require('./src/components/ui/index.ts');
            const expectedComponents = [
              'Button', 'Card', 'Modal', 'DataTable', 'Chart',
              'Tabs', 'Accordion', 'Toast', 'Calendar', 'Form'
            ];
            const missing = expectedComponents.filter(c => !components[c]);
            if (missing.length > 0) {
              console.error('Missing components:', missing);
              process.exit(1);
            }
            console.log('All components properly exported');
          "

      - name: Validate component documentation
        run: |
          # Check that all components have documentation
          for component in Button Card Modal DataTable Chart Tabs Accordion Toast Calendar Form; do
            if [ ! -f "src/components/ui/$component/README.md" ]; then
              echo "Warning: Missing documentation for $component"
            fi
          done

      - name: Component size analysis
        run: |
          npm run build
          echo "Component bundle sizes:"
          find .next/static/chunks -name "*.js" -exec ls -lh {} \; | sort -k5 -hr | head -10

  # Performance regression detection
  performance-regression:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build current branch
        run: npm run build

      - name: Measure current performance
        run: npm run perf:analyze > current-perf.json

      - name: Checkout base branch
        run: git checkout ${{ github.base_ref }}

      - name: Install dependencies (base)
        run: npm ci

      - name: Build base branch
        run: npm run build

      - name: Measure base performance
        run: npm run perf:analyze > base-perf.json

      - name: Compare performance
        run: |
          # Simple performance comparison script
          node -e "
            const fs = require('fs');
            // Add performance comparison logic here
            console.log('Performance regression check completed');
          "
